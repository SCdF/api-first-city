openapi: 3.1.0
info:
  title: Sample Service API
  version: 1.0.0
  description: Template service demonstrating API-first design
servers:
  - url: http://localhost:3001
    description: Direct service access (development)
  - url: http://localhost:8082/sample
    description: API Gateway path
paths:
  /resources:
    get:
      summary: List resources
      description: Retrieve a paginated list of resources
      operationId: listResources
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - name: page_size
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: Number of items per page
        - name: name
          in: query
          schema:
            type: string
          description: Filter resources by name
      responses:
        '200':
          description: List of resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth2: ['read:sample']
    post:
      summary: Create a new resource
      description: Create a new resource with the provided data
      operationId: createResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth2: ['write:sample']
  /resources/{id}:
    get:
      summary: Get a resource by ID
      description: Retrieve detailed information about a specific resource
      operationId: getResource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Resource ID
      responses:
        '200':
          description: Resource details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth2: ['read:sample']
    put:
      summary: Update a resource
      description: Update an existing resource with new data
      operationId: updateResource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Resource ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceUpdate'
      responses:
        '200':
          description: Resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth2: ['write:sample']
    delete:
      summary: Delete a resource
      description: Remove a resource from the system
      operationId: deleteResource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Resource ID
      responses:
        '204':
          description: Resource deleted
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth2: ['write:sample']
  /health:
    get:
      summary: Health check
      description: Check the health status of the service
      operationId: healthCheck
      responses:
        '200':
          description: Service health information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [ok, degraded, down]
                  version:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
                required:
                  - status
                  - timestamp
      security: []  # No authentication required for health check
components:
  schemas:
    ResourceStatus:
      type: string
      description: Status of a resource
      enum: [active, inactive, pending, archived]

    Resource:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the resource
        name:
          type: string
          description: Name of the resource
        description:
          type: string
          description: Detailed description of the resource
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Current status of the resource
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the resource
        createdAt:
          type: string
          format: date-time
          description: When the resource was created
        updatedAt:
          type: string
          format: date-time
          description: When the resource was last updated
      required:
        - id
        - name
        - status
        - createdAt
        - updatedAt

    ResourceCreate:
      type: object
      properties:
        name:
          type: string
          description: Name of the resource
        description:
          type: string
          description: Detailed description of the resource
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Initial status of the resource
          default: active
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the resource
      required:
        - name

    ResourceUpdate:
      type: object
      properties:
        name:
          type: string
          description: Updated name of the resource
        description:
          type: string
          description: Updated description of the resource
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Updated status of the resource
        tags:
          type: array
          items:
            type: string
          description: Updated tags for the resource

    ResourceList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: List of resources
        total:
          type: number
          description: Total number of resources matching the query
        page:
          type: number
          description: Current page number
        page_size:
          type: number
          description: Number of items per page
      required:
        - items
        - total
        - page
        - page_size

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              additionalProperties: true
              description: Additional error details
          required:
            - code
            - message
      required:
        - error

  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: http://localhost:8081/oauth/token
          scopes:
            'read:sample': Read access to sample service resources
            'write:sample': Write access to sample service resources 