// This file is auto-generated by @hey-api/openapi-ts

export type Resource = {
    /**
     * Unique ID for the patrol
     */
    id: string;
    /**
     * Case ID
     */
    caseId?: string;
    /**
     * Location of the Patrol
     */
    location: string;
    /**
     * When the patrol started
     */
    startedAt: Date;
    /**
     * When the patrol ended
     */
    endedAt?: Date;
    /**
     * Type of the patrol
     */
    patrolType: 'car' | 'foot' | 'bike' | 'horse';
    /**
     * Callout type
     */
    callType?: string;
    /**
     * When the resource was created
     */
    createdAt: Date;
    /**
     * When the resource was last updated
     */
    updatedAt: Date;
};

export type ResourceCreate = {
    /**
     * Case ID
     */
    caseId?: string;
    /**
     * Location of the Patrol
     */
    location: string;
    /**
     * When the patrol starts
     */
    startedAt: Date;
    /**
     * When the patrol ended
     */
    endedAt?: Date;
    /**
     * Type of the patrol
     */
    patrolType: 'car' | 'foot' | 'bike' | 'horse';
    /**
     * Callout type
     */
    callType?: string;
};

export type ResourceUpdate = {
    /**
     * Case ID
     */
    caseId?: string;
    /**
     * Location of the Patrol
     */
    location?: string;
    /**
     * When the patrol starts, can't be updated if the patrol has already started
     */
    startedAt?: Date;
    /**
     * When the patrol ends
     */
    endedAt?: Date;
    /**
     * Callout type
     */
    callType?: string;
};

export type ResourceList = {
    /**
     * List of resources
     */
    items: Array<Resource>;
    /**
     * Total number of resources matching the query
     */
    total: number;
    /**
     * Current page number
     */
    page: number;
    /**
     * Number of items per page
     */
    page_size: number;
};

export type PolicePatrol = {
    /**
     * Unique ID for the police patrol
     */
    id: string;
    /**
     * Case ID
     */
    caseId?: string;
    /**
     * Location of the police patrol
     */
    location: string;
    /**
     * When the police patrol started
     */
    startedAt: Date;
    /**
     * When the police patrol ended
     */
    endedAt?: Date;
    /**
     * Type of the police patrol
     */
    patrolType: 'car' | 'foot' | 'bike' | 'horse';
    /**
     * Callout type
     */
    callType?: string;
    /**
     * When the police patrol was created
     */
    createdAt: Date;
    /**
     * When the police patrol was last updated
     */
    updatedAt: Date;
};

export type PolicePatrolCreate = {
    /**
     * Case ID
     */
    caseId?: string;
    /**
     * Location of the police patrol
     */
    location: string;
    /**
     * When the police patrol starts
     */
    startedAt: Date;
    /**
     * When the police patrol ended
     */
    endedAt?: Date;
    /**
     * Type of the police patrol
     */
    patrolType: 'car' | 'foot' | 'bike' | 'horse';
    /**
     * Callout type
     */
    callType?: string;
};

export type PolicePatrolUpdate = {
    /**
     * Case ID
     */
    caseId?: string;
    /**
     * Location of the police patrol
     */
    location?: string;
    /**
     * When the police patrol starts, can't be updated if the patrol has already started
     */
    startedAt?: Date;
    /**
     * When the police patrol ends
     */
    endedAt?: Date;
    /**
     * Callout type
     */
    callType?: string;
};

export type PolicePatrolList = {
    /**
     * List of police patrols
     */
    items: Array<PolicePatrol>;
    /**
     * Total number of police patrols matching the query
     */
    total: number;
    /**
     * Current page number
     */
    page: number;
    /**
     * Number of items per page
     */
    page_size: number;
};

export type _Error = {
    error: {
        /**
         * Error code
         */
        code: string;
        /**
         * Human-readable error message
         */
        message: string;
        /**
         * Additional error details
         */
        details?: {
            [key: string]: unknown;
        };
    };
};

export type ListPolicePatrolsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Page number for pagination
         */
        page?: number;
        /**
         * Number of items per page
         */
        page_size?: number;
        /**
         * Filter police patrols by name
         */
        name?: string;
    };
    url: '/police-patrols';
};

export type ListPolicePatrolsErrors = {
    /**
     * Invalid request parameters
     */
    400: _Error;
    /**
     * Unauthorized
     */
    401: _Error;
};

export type ListPolicePatrolsError = ListPolicePatrolsErrors[keyof ListPolicePatrolsErrors];

export type ListPolicePatrolsResponses = {
    /**
     * List of police patrols
     */
    200: PolicePatrolList;
};

export type ListPolicePatrolsResponse = ListPolicePatrolsResponses[keyof ListPolicePatrolsResponses];

export type CreatePolicePatrolData = {
    body: PolicePatrolCreate;
    path?: never;
    query?: never;
    url: '/police-patrols';
};

export type CreatePolicePatrolErrors = {
    /**
     * Invalid request data
     */
    400: _Error;
    /**
     * Unauthorized
     */
    401: _Error;
};

export type CreatePolicePatrolError = CreatePolicePatrolErrors[keyof CreatePolicePatrolErrors];

export type CreatePolicePatrolResponses = {
    /**
     * Police patrol created
     */
    201: PolicePatrol;
};

export type CreatePolicePatrolResponse = CreatePolicePatrolResponses[keyof CreatePolicePatrolResponses];

export type GetPolicePatrolData = {
    body?: never;
    path: {
        /**
         * Police patrol ID
         */
        id: string;
    };
    query?: never;
    url: '/police-patrols/{id}';
};

export type GetPolicePatrolErrors = {
    /**
     * Unauthorized
     */
    401: _Error;
    /**
     * Police patrol not found
     */
    404: _Error;
};

export type GetPolicePatrolError = GetPolicePatrolErrors[keyof GetPolicePatrolErrors];

export type GetPolicePatrolResponses = {
    /**
     * Police patrol details
     */
    200: PolicePatrol;
};

export type GetPolicePatrolResponse = GetPolicePatrolResponses[keyof GetPolicePatrolResponses];

export type UpdatePolicePatrolData = {
    body: PolicePatrolUpdate;
    path: {
        /**
         * Police patrol ID
         */
        id: string;
    };
    query?: never;
    url: '/police-patrols/{id}';
};

export type UpdatePolicePatrolErrors = {
    /**
     * Invalid request data
     */
    400: _Error;
    /**
     * Unauthorized
     */
    401: _Error;
    /**
     * Police patrol not found
     */
    404: _Error;
};

export type UpdatePolicePatrolError = UpdatePolicePatrolErrors[keyof UpdatePolicePatrolErrors];

export type UpdatePolicePatrolResponses = {
    /**
     * Police patrol updated
     */
    200: PolicePatrol;
};

export type UpdatePolicePatrolResponse = UpdatePolicePatrolResponses[keyof UpdatePolicePatrolResponses];

export type HealthCheckData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckResponses = {
    /**
     * Service health information
     */
    200: {
        status: 'ok' | 'degraded' | 'down';
        version?: string;
        timestamp: Date;
    };
};

export type HealthCheckResponse = HealthCheckResponses[keyof HealthCheckResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:3001' | 'http://localhost:8082/sample' | (string & {});
};