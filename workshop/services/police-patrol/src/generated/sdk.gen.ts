// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { ListPolicePatrolsData, ListPolicePatrolsResponse, ListPolicePatrolsError, CreatePolicePatrolData, CreatePolicePatrolResponse, CreatePolicePatrolError, GetPolicePatrolData, GetPolicePatrolResponse, GetPolicePatrolError, UpdatePolicePatrolData, UpdatePolicePatrolResponse, UpdatePolicePatrolError, HealthCheckData, HealthCheckResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * List police patrols
 * Retrieve a paginated list of police patrols
 */
export const listPolicePatrols = <ThrowOnError extends boolean = false>(options?: Options<ListPolicePatrolsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListPolicePatrolsResponse, ListPolicePatrolsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/police-patrols',
        ...options
    });
};

/**
 * Create a new police patrol
 * Create a new police patrol with the provided data
 */
export const createPolicePatrol = <ThrowOnError extends boolean = false>(options: Options<CreatePolicePatrolData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreatePolicePatrolResponse, CreatePolicePatrolError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/police-patrols',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get a police patrol by ID
 * Retrieve detailed information about a specific police patrol
 */
export const getPolicePatrol = <ThrowOnError extends boolean = false>(options: Options<GetPolicePatrolData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPolicePatrolResponse, GetPolicePatrolError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/police-patrols/{id}',
        ...options
    });
};

/**
 * Update a police patrol
 * Update an existing police patrol with new data
 */
export const updatePolicePatrol = <ThrowOnError extends boolean = false>(options: Options<UpdatePolicePatrolData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdatePolicePatrolResponse, UpdatePolicePatrolError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/police-patrols/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Health check
 * Check the health status of the service
 */
export const healthCheck = <ThrowOnError extends boolean = false>(options?: Options<HealthCheckData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<HealthCheckResponse, unknown, ThrowOnError>({
        url: '/health',
        ...options
    });
};